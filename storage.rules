rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if file size is under 5MB
    function isValidSize() {
      return request.resource.size < 5 * 1024 * 1024;
    }

    // Helper function to check if file is an image
    function isImage() {
      return request.resource.contentType.matches('image/.*');
    }

    // Student photos - allow authenticated users to upload, anyone to read
    match /students/{allPaths=**} {
      allow read: if true; // Public read for student photos
      allow write: if isAuthenticated() && isImage() && isValidSize();
    }

    // Record media - allow authenticated users to upload, anyone to read
    match /records/{allPaths=**} {
      allow read: if true; // Public read for record media
      allow write: if isAuthenticated() && isImage() && isValidSize();
    }

    // User profile photos - allow authenticated users to upload, anyone to read
    match /users/{userId}/{allPaths=**} {
      allow read: if true;
      allow write: if isAuthenticated() && request.auth.uid == userId && isImage() && isValidSize();
    }
  }
}
